{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useTodoState = initialTodos => {\n  _s();\n\n  const [todos, setTodos] = useState(initialTodos);\n  return {\n    todos,\n    addTodo: newTodoText => {\n      setTodos([...todos, {\n        id: uuidv4(),\n        task: newTodoText,\n        completed: false\n      }]);\n    },\n    removeTodo: todoId => {\n      const updatedTodos = todos.filter(todo => todo.id !== todoId);\n      setTodos(updatedTodos);\n    },\n    editTodo: (todoId, newTask) => {\n      const updatedTodos = todos.map(todo => todo.id === todoId ? { ...todo,\n        task: newTask\n      } : todo);\n      setTodos(updatedTodos);\n    },\n    toggleTodo: todoId => {\n      const updatedTodos = todos.map(todo => todo.id === todoId ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n      setTodos(updatedTodos);\n    }\n  };\n};\n\n_s(useTodoState, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n\nexport default useTodoState;","map":{"version":3,"sources":["/Users/camille_celine/code/camille-celine/Todo-project/src/hooks/useTodoState.js"],"names":["useState","v4","uuidv4","useTodoState","initialTodos","todos","setTodos","addTodo","newTodoText","id","task","completed","removeTodo","todoId","updatedTodos","filter","todo","editTodo","newTask","map","toggleTodo"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;AAEA,MAAMC,YAAY,GAAGC,YAAY,IAAI;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,YAAD,CAAlC;AACA,SAAO;AACLC,IAAAA,KADK;AAELE,IAAAA,OAAO,EAAEC,WAAW,IAAI;AACtBF,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACI,QAAAA,EAAE,EAAEP,MAAM,EAAX;AAAeQ,QAAAA,IAAI,EAAEF,WAArB;AAAkCG,QAAAA,SAAS,EAAE;AAA7C,OAAX,CAAD,CAAR;AACD,KAJI;AAKLC,IAAAA,UAAU,EAAEC,MAAM,IAAI;AACpB,YAAMC,YAAY,GAAGT,KAAK,CAACU,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYI,MAAjC,CAArB;AACAP,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD,KARI;AASLG,IAAAA,QAAQ,EAAE,CAACJ,MAAD,EAASK,OAAT,KAAqB;AAC7B,YAAMJ,YAAY,GAAGT,KAAK,CAACc,GAAN,CAAWH,IAAI,IAClCA,IAAI,CAACP,EAAL,KAAYI,MAAZ,GAAqB,EAAC,GAAGG,IAAJ;AAAUN,QAAAA,IAAI,EAAEQ;AAAhB,OAArB,GAAgDF,IAD7B,CAArB;AAGAV,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD,KAdI;AAeLM,IAAAA,UAAU,EAAEP,MAAM,IAAI;AACpB,YAAMC,YAAY,GAAGT,KAAK,CAACc,GAAN,CAAWH,IAAI,IAClCA,IAAI,CAACP,EAAL,KAAYI,MAAZ,GAAqB,EAAC,GAAGG,IAAJ;AAAUL,QAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAA3B,OAArB,GAA6DK,IAD1C,CAArB;AAGAV,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD;AApBI,GAAP;AAsBD,CAxBD;;GAAMX,Y;;AA0BN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nconst useTodoState = initialTodos => {\n  const [todos, setTodos] = useState(initialTodos);\n  return {\n    todos, \n    addTodo: newTodoText => {\n      setTodos([...todos, {id: uuidv4(), task: newTodoText, completed: false}]);\n    },\n    removeTodo: todoId => {\n      const updatedTodos = todos.filter(todo => todo.id !== todoId);\n      setTodos(updatedTodos);\n    },\n    editTodo: (todoId, newTask) => {\n      const updatedTodos = todos.map( todo => \n        todo.id === todoId ? {...todo, task: newTask} : todo\n      );\n      setTodos(updatedTodos);\n    },\n    toggleTodo: todoId => {\n      const updatedTodos = todos.map( todo => \n        todo.id === todoId ? {...todo, completed: !todo.completed} : todo\n      );\n      setTodos(updatedTodos);\n    }\n  }\n}\n\nexport default useTodoState;\n\n"]},"metadata":{},"sourceType":"module"}