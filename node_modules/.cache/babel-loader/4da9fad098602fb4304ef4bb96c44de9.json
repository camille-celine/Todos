{"ast":null,"code":"var _jsxFileName = \"/Users/camille_celine/code/camille-celine/Todo-project/src/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    task,\n    id,\n    completed,\n    removeTodo,\n    editTodo,\n    toggleTodo\n  } = _ref;\n  const [isEditing, toggle] = useToggleState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      children: isEditing ? /*#__PURE__*/_jsxDEV(EditTodoForm, {\n        id: id,\n        task: task,\n        editTodo: editTodo,\n        toggleEditForm: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          onClick: () => toggleTodo(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          style: {\n            textDecoration: completed ? \"line-through\" : \"none\"\n          },\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggle,\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => removeTodo(id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"pXW9QwkhRia+AswZZ82Sn77+LD4=\", false, function () {\n  return [useToggleState];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/camille_celine/code/camille-celine/Todo-project/src/Todo.js"],"names":["React","useToggleState","EditTodoForm","ListItem","ListItemText","ListItemSecondaryAction","Checkbox","IconButton","DeleteIcon","EditIcon","Todo","task","id","completed","removeTodo","editTodo","toggleTodo","isEditing","toggle","textDecoration"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;;AAEA,SAASC,IAAT,OAAuE;AAAA;;AAAA,MAAzD;AAACC,IAAAA,IAAD;AAAOC,IAAAA,EAAP;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,GAAyD;AACrE,QAAM,CAACC,SAAD,EAAYC,MAAZ,IAAsBjB,cAAc,CAAC,KAAD,CAA1C;AACA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAA,gBACIgB,SAAS,gBACR,QAAC,YAAD;AACC,QAAA,EAAE,EAAEL,EADL;AAEC,QAAA,IAAI,EAAED,IAFP;AAGC,QAAA,QAAQ,EAAEI,QAHX;AAIC,QAAA,cAAc,EAAEG;AAJjB;AAAA;AAAA;AAAA;AAAA,cADQ,gBAUT;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAE,MAAMF,UAAU,CAACJ,EAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE;AAACO,YAAAA,cAAc,EAAEN,SAAS,GAAG,cAAH,GAAoB;AAA9C,WAArB;AAAA,oBAA6EF;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,uBAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAEO,MAArB;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAMJ,UAAU,CAACF,EAAD,CAArC;AAAA,mCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAhCQF,I;UACqBT,c;;;KADrBS,I;AAkCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport useToggleState from \"./hooks/useToggleState\";\nimport EditTodoForm from \"./EditTodoForm\";\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItemSecondaryAction from '@mui/material/ListItemSecondaryAction';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nfunction Todo({task, id, completed, removeTodo, editTodo, toggleTodo}) {\n  const [isEditing, toggle] = useToggleState(false);\n  return (\n    <div>\n      <ListItem>\n        { isEditing ? \n          (<EditTodoForm \n            id={id}\n            task={task}\n            editTodo={editTodo}\n            toggleEditForm={toggle}\n          /> )\n        : \n        \n          (\n          <>{/* Todo: id, task, completed */}\n            <Checkbox onClick={() => toggleTodo(id)}/>\n            <ListItemText style={{textDecoration: completed ? \"line-through\" : \"none\"}}>{task}</ListItemText>\n            <ListItemSecondaryAction>\n              <IconButton onClick={toggle}>\n                <EditIcon />\n              </IconButton>\n              <IconButton onClick={() => removeTodo(id)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </>\n        )\n        }\n      </ListItem>\n    </div>\n  )\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}