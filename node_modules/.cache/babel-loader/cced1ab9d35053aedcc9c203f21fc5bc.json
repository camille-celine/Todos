{"ast":null,"code":"var _jsxFileName = \"/Users/camille_celine/code/camille-celine/Todo-project/src/TodoApp.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectList from \"./ProjectList\";\nimport useProjectState from \"./hooks/useProjectState\";\nimport Paper from '@mui/material/Paper';\n/* import { Typography } from '@mui/material';\nimport { AppBar } from '@mui/material'; */\n\nimport { Toolbar } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport List from '@mui/material/List';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const initialProject = [{\n    id: 1,\n    name: \"My First Project\"\n  }]; // Control the state of all the projects\n\n  const {\n    projects,\n    addProject,\n    removeProject\n  } = useProjectState(initialProject);\n  const drawerWidth = 240;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 0,\n      margin: 0,\n      height: \"100vh\",\n      backgroundColor: \"#fafafa\"\n    },\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          width: drawerWidth,\n          flexShrink: 0,\n          [`& .MuiDrawer-paper`]: {\n            width: drawerWidth,\n            boxSizing: 'border-box'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            overflow: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), \"Projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), projects.map((project, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                dispay: \"block\",\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), i < projects.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"main\",\n        sx: {\n          flexGrow: 1,\n          p: 3,\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(ProjectForm, {\n          addProject: addProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n          projects: projects,\n          removeProject: removeProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoApp, \"5A+HDWWC8Et2t2OfamKMv5x+M4Y=\", false, function () {\n  return [useProjectState];\n});\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"sources":["/Users/camille_celine/code/camille-celine/Todo-project/src/TodoApp.js"],"names":["React","ProjectForm","ProjectList","useProjectState","Paper","Toolbar","Box","Drawer","CssBaseline","List","KeyboardArrowDownIcon","ListItem","ListItemIcon","Divider","TodoApp","initialProject","id","name","projects","addProject","removeProject","drawerWidth","padding","margin","height","backgroundColor","display","width","flexShrink","boxSizing","overflow","map","project","i","length","flexGrow","p","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ProjectForm from \"./ProjectForm\";\nimport ProjectList from \"./ProjectList\";\nimport useProjectState from \"./hooks/useProjectState\";\nimport Paper from '@mui/material/Paper';\n/* import { Typography } from '@mui/material';\nimport { AppBar } from '@mui/material'; */\nimport { Toolbar } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport List from '@mui/material/List';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport Divider from '@mui/material/Divider';\n\nfunction TodoApp() {\n\n  const initialProject = [{ id: 1, name: \"My First Project\"}];\n  // Control the state of all the projects\n  const {projects, addProject, removeProject} = useProjectState(initialProject);\n\n  const drawerWidth = 240;\n  return (\n    <Paper\n      style={{\n        padding: 0,\n        margin: 0,\n        height: \"100vh\",\n        backgroundColor: \"#fafafa\"\n      }}\n      elevation={0}\n    >\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        {/* --- App Bar --- \n        <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              TodoApp\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        */}\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            width: drawerWidth,\n            flexShrink: 0,\n            [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\n          }}\n        >\n          <Toolbar />\n          <Box sx={{ overflow: 'auto' }}>\n            <List>\n              <ListItem button >\n                <ListItemIcon>\n                  <KeyboardArrowDownIcon/>\n                </ListItemIcon>\n                Projects\n              </ListItem>\n              {projects.map((project, i) => (\n                <ListItem>\n                  <div dispay=\"block\">{project.name}</div>\n                  {i < projects.length - 1 && <Divider />}\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </Drawer>\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3, mt: 4 }}>\n          <ProjectForm addProject={addProject}/>\n          <ProjectList \n            projects={projects} \n            removeProject={removeProject}\n          />\n        </Box>\n      </Box> \n    </Paper>\n  )\n}\n\nexport default TodoApp;\n\n"]},"metadata":{},"sourceType":"module"}